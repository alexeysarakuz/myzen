{"version":3,"sources":["modules/auth/auth.actions.ts","components/ScrollToTop/ScrollToTop.tsx","theme/patterns/breakpoints.ts","theme/patterns/colors.ts","theme/themes/base.ts","theme/index.ts","theme/patterns/fonts.ts","theme/patterns/shadows.ts","components/Preloader/Preloader.tsx","routes.tsx","App.tsx","store/middlewares/loggerMiddleware.ts","config/ReduxPersist.ts","modules/auth/auth.reducer.ts","modules/router/RouterReducer.ts","store/rootReducer.ts","modules/app/app.actions.ts","modules/app/app.sagas.ts","modules/auth/auth.sagas.ts","store/rootSaga.ts","store/configureStore.ts","AppContainer.tsx","serviceWorker.ts","index.tsx"],"names":["__webpack_require__","d","__webpack_exports__","LOGIN","REGISTER","LOGOUT","logout","concat","type","ScrollToTop","prevProps","this","props","location","window","scrollTo","children","React","withRouter","breakpoints","xs","sm","md","lg","xl","colorScheme","white","value","name","black","themeMap","base","theme","colors","R","acc","_ref","_ref2","Object","slicedToArray","key","scheme","fonts","shadows","softOuterShadow","GlobalStyle","createGlobalStyle","_templateObject","reset","Preloader","react_default","a","createElement","Wrapper","styled","div","Preloader_templateObject","DashboardPage","Loadable","loader","e","then","bind","loading","components_Preloader_Preloader","LogoutPage","NotFoundPage","routes","react_router","exact","path","component","App","styled_components_browser_esm","Helmet","titleTemplate","defaultTitle","App_GlobalStyle","components_ScrollToTop_ScrollToTop","loggerMiddleware","createLogger","collapsed","duration","REDUX_PERSIST","active","reducerVersion","storeConfig","storage","whitelist","initialState","id","token","isAuthenticated","email","getIsAuthenticated","AuthReducer","state","arguments","length","undefined","connectRouter","persist","persistReducer","ReduxPersist","BOOTSTRAP","AUTHENTICATED","appBootstrap","appAuthenticated","appBootstrapSaga","appAuthenticatedSaga","loadPages","appSagas","regenerator_default","wrap","_context","prev","next","put","stop","_marked","_context2","take","REHYDRATE","select","sent","_marked2","_context3","preloadAll","_marked3","_context4","all","takeLatest","fork","_marked4","registerSuccessSaga","loginSuccessSaga","logoutSaga","authSagas","push","auth_sagas_marked","auth_sagas_marked2","auth_sagas_marked3","t0","takeEvery","t1","t2","t3","t4","auth_sagas_marked4","rootSaga","rootSaga_marked","isServer","document","history","createMemoryHistory","initialEntries","createBrowserHistory","__PRELOADED_STATE__","sagaMiddleware","createSagaMiddleware","middlewares","routerMiddleware","thunk","jest","composeEnhancers","compose","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","combineReducers","RouterReducer","rootReducer","applyMiddleware","apply","persistor","persistStore","run","configureStore","AppContainer","es","integration_react","esm","react_frontload_lib","noServerRender","src_App","Boolean","hostname","match","navigator","serviceWorker","ready","registration","unregister","mountEl","getElementById","hasChildNodes","preloadReady","hydrate","src_AppContainer","render"],"mappings":"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","file":"static/js/main.e3e1a138.chunk.js","sourcesContent":["export const namespace = 'AUTH';\nexport const LOGIN = `${namespace}/LOGIN`;\nexport const REGISTER = `${namespace}/REGISTER`;\nexport const LOGOUT = `${namespace}/LOGOUT`;\n\nexport const login = (payload: { email: string; password: string }) => ({\n  type: LOGIN,\n  payload: {\n    request: {\n      url: '/auth/login',\n      data: payload,\n    },\n  },\n});\n\nexport const register = (payload: { email: string; password: string }) => ({\n  type: REGISTER,\n  payload: {\n    request: {\n      url: '/auth/login',\n      data: payload,\n    },\n  },\n});\n\nexport const logout = () => ({\n  type: LOGOUT,\n});\n","import * as React from 'react';\nimport { withRouter } from 'react-router-dom';\n\ninterface ScrollToTopProps {\n  children: React.ReactNode;\n  location: Location;\n}\n\nclass ScrollToTop extends React.Component<ScrollToTopProps> {\n  public componentDidUpdate(prevProps: ScrollToTopProps) {\n    if (this.props.location !== prevProps.location) {\n      window.scrollTo(0, 0);\n    }\n  }\n\n  public render() {\n    return this.props.children;\n  }\n}\n\nexport default withRouter<any>(ScrollToTop);\n","const breakpoints = {\n  xs: 0,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200,\n};\n\nexport default breakpoints;\n","import * as R from 'ramda';\n\nexport const colorScheme = {\n  white: { value: '#FFF', name: 'White' },\n  black: { value: '#000', name: 'Black' },\n};\n\nexport const getColor = (colorKey: string) =>\n  R.path([colorKey, 'value'], colorScheme);\n\nconst getColorsMap = () =>\n  R.compose(\n    R.reduce(\n      (acc: any, [key, scheme]: any) => R.assoc(key, scheme.value, acc),\n      {},\n    ),\n    R.toPairs,\n  )(colorScheme);\n\nconst colors = getColorsMap();\n\nexport default colors;\n","import { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n\nimport breakpoints from '../patterns/breakpoints';\nimport colors from '../patterns/colors';\nimport fonts from '../patterns/fonts';\nimport shadows from '../patterns/shadows';\n\nexport const GlobalStyle = createGlobalStyle`\n  ${reset}\n\n  input:-webkit-autofill,\n  input:-webkit-autofill:hover,\n  input:-webkit-autofill:focus,\n  textarea:-webkit-autofill,\n  textarea:-webkit-autofill:hover,\n  textarea:-webkit-autofill:focus,\n  select:-webkit-autofill,\n  select:-webkit-autofill:hover,\n  select:-webkit-autofill:focus {\n    transition-delay: 99999s;\n  }\n\n  a {\n    text-decoration: none;\n\n    &:focus,\n    &:hover {\n      text-decoration: none;\n    }\n  }\n\n  .ant-layout,\n  .ant-table-expanded-row {\n    background-color: #f5f7fb !important;\n  }\n`;\n\nexport const theme = {\n  // patterns\n  breakpoints,\n  colors,\n  fonts,\n  shadows,\n  // components\n};\n","import {\n  GlobalStyle as BaseGlobalStyle,\n  theme as baseTheme,\n} from './themes/base';\n\nconst themeMap: Record<string, any> = {\n  base: {\n    theme: baseTheme,\n    GlobalStyle: BaseGlobalStyle,\n  },\n};\n\nexport const getTheme = (themeName: string) => themeMap[themeName] || {};\n","const fonts = {};\n\nexport default fonts;\n","const shadows = {\n  softOuterShadow: '0 1px 11px 0 rgba(9,8,61,0.04)',\n};\n\nexport default shadows;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Preloader = () => <Preloader.Wrapper>Loading...</Preloader.Wrapper>;\n\nPreloader.Wrapper = styled.div`\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: white;\n  z-index: 2;\n`;\n\nexport default Preloader;\n","import React from 'react';\nimport Loadable from 'react-loadable';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Preloader from 'components/Preloader/Preloader';\n\nconst DashboardPage = Loadable({\n  loader: () =>\n    import(\n      './modules/dashboard/pages/DashboardPage' /* webpackChunkName: \"DashboardPage\" */\n    ),\n  loading: () => <Preloader />,\n});\n\nconst LogoutPage = Loadable({\n  loader: () =>\n    import(\n      './modules/auth/pages/LogoutPage' /* webpackChunkName: \"LogoutPage\" */\n    ),\n  loading: () => <Preloader />,\n});\n\nconst NotFoundPage = Loadable({\n  loader: () =>\n    import(\n      './modules/landing/pages/NotFoundPage' /* webpackChunkName: \"NotFoundPage\" */\n    ),\n  loading: () => <Preloader />,\n});\n\nexport default (\n  <div>\n    <Switch>\n      <Route exact path=\"/\" component={DashboardPage} />\n      <Route exact path=\"/logout\" component={LogoutPage} />\n      {/* Catch all routes */}\n      <Route component={NotFoundPage} />\n    </Switch>\n  </div>\n);\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { ThemeProvider } from 'styled-components';\n\nimport ScrollToTop from 'components/ScrollToTop/ScrollToTop';\nimport { getTheme } from 'theme';\n\nimport routes from './routes';\n\nconst { theme, GlobalStyle } = getTheme('base');\n\nconst App = () => (\n  <ThemeProvider theme={theme}>\n    <div>\n      <Helmet titleTemplate=\"MyZen | %s\" defaultTitle=\"MyZen\" />\n      <GlobalStyle />\n      <div>\n        <ScrollToTop>{routes}</ScrollToTop>\n      </div>\n    </div>\n  </ThemeProvider>\n);\n\nexport default App;\n","import { createLogger } from 'redux-logger';\n\nconst loggerMiddleware = createLogger({\n  collapsed: true,\n  duration: true,\n});\n\nexport default loggerMiddleware;\n","import storage from 'redux-persist/lib/storage';\n\nconst REDUX_PERSIST = {\n  active: true,\n  reducerVersion: '1',\n  storeConfig: {\n    storage,\n    key: 'primary',\n    whitelist: ['auth'],\n  },\n};\n\nexport default REDUX_PERSIST;\n","import * as R from 'ramda';\n\nimport { LOGIN, REGISTER, LOGOUT } from './auth.actions';\n\nexport const STATE_KEY = 'auth';\n\nexport interface AuthState {\n  id: string;\n  token: string;\n  isAuthenticated: boolean;\n  email: string;\n}\n\nexport const initialState: AuthState = {\n  id: null,\n  token: null,\n  isAuthenticated: false,\n  email: null,\n};\n\nconst AuthReducer = (\n  state: AuthState = initialState,\n  action: Record<string, any>,\n) => {\n  switch (action.type) {\n    case `${LOGIN}_SUCCESS`:\n    case `${REGISTER}_SUCCESS`: {\n      return R.mergeDeepRight(state, {});\n    }\n    case LOGOUT: {\n      return initialState;\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport const getId = R.path([STATE_KEY, 'id']);\nexport const getToken = R.path([STATE_KEY, 'token']);\nexport const getEmail = R.path([STATE_KEY, 'email']);\nexport const getIsAuthenticated = R.path([STATE_KEY, 'isAuthenticated']);\n\nexport default AuthReducer;\n","import { connectRouter } from 'connected-react-router';\n\nexport const STATE_KEY = 'router';\n\nexport default connectRouter;\n","import * as R from 'ramda';\nimport { combineReducers } from 'redux';\nimport { persistReducer } from 'redux-persist';\n\nimport ReduxPersist from 'config/ReduxPersist';\nimport AuthReducer, {\n  STATE_KEY as AUTH_STATE_KEY,\n} from 'modules/auth/auth.reducer';\nimport RouterReducer, {\n  STATE_KEY as ROUTER_STATE_KEY,\n} from 'modules/router/RouterReducer';\n\nconst persist = R.curry(persistReducer)(ReduxPersist.storeConfig);\n\nexport default (history: any) =>\n  R.compose(\n    persist,\n    combineReducers,\n    R.assoc(AUTH_STATE_KEY, AuthReducer),\n    R.assoc(ROUTER_STATE_KEY, RouterReducer(history)),\n  )({});\n","export const namespace = 'APP';\nexport const BOOTSTRAP = `${namespace}/BOOTSTRAP`;\nexport const AUTHENTICATED = `${namespace}/AUTHENTICATED`;\n\nexport const appBootstrap = () => ({\n  type: BOOTSTRAP,\n});\n\nexport const appAuthenticated = () => ({\n  type: AUTHENTICATED,\n});\n","import Loadable from 'react-loadable';\nimport { REHYDRATE } from 'redux-persist';\nimport { all, fork, put, select, take, takeLatest } from 'redux-saga/effects';\n\nimport { LOGIN, REGISTER } from 'modules/auth/auth.actions';\nimport { getIsAuthenticated } from 'modules/auth/auth.reducer';\n\nimport { appAuthenticated, appBootstrap, BOOTSTRAP } from './app.actions';\n\nfunction* appBootstrapSaga() {\n  yield put(appBootstrap());\n}\n\nfunction* appAuthenticatedSaga() {\n  while (true) {\n    yield take([REHYDRATE, `${LOGIN}_SUCCESS`, `${REGISTER}_SUCCESS`]);\n    const isAuthenticated = yield select(getIsAuthenticated);\n\n    if (isAuthenticated) {\n      yield put(appAuthenticated());\n    }\n  }\n}\n\nfunction* loadPages() {\n  yield Loadable.preloadAll();\n}\n\nfunction* appSagas() {\n  yield all([\n    takeLatest(REHYDRATE, appBootstrapSaga),\n    fork(appAuthenticatedSaga),\n    takeLatest(BOOTSTRAP, loadPages),\n  ]);\n}\n\nexport default appSagas;\n","import { push } from 'connected-react-router';\nimport { all, put, takeEvery } from 'redux-saga/effects';\n\nimport { REGISTER, LOGIN, LOGOUT } from './auth.actions';\n\nfunction* registerSuccessSaga() {\n  yield put(push('/'));\n}\n\nfunction* loginSuccessSaga() {\n  yield put(push('/'));\n}\n\nfunction* logoutSaga(): any {\n  yield put(push('/login'));\n}\n\nfunction* authSagas() {\n  yield all([\n    yield takeEvery(`${REGISTER}_SUCCESS`, registerSuccessSaga),\n    yield takeEvery(`${LOGIN}_SUCCESS`, loginSuccessSaga),\n    yield takeEvery(LOGOUT, logoutSaga),\n  ]);\n}\n\nexport default authSagas;\n","import { all, fork } from 'redux-saga/effects';\n\nimport appSagas from 'modules/app/app.sagas';\nimport authSagas from 'modules/auth/auth.sagas';\n\nfunction* rootSaga() {\n  yield all([fork(appSagas)]);\n  yield all([fork(authSagas)]);\n}\n\nexport default rootSaga;\n","import { routerMiddleware } from 'connected-react-router';\nimport { createBrowserHistory, createMemoryHistory } from 'history';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { persistStore } from 'redux-persist';\nimport createSagaMiddleware from 'redux-saga';\nimport thunk from 'redux-thunk';\n\nimport loggerMiddleware from './middlewares/loggerMiddleware';\nimport rootReducer from './rootReducer';\nimport rootSaga from './rootSaga';\n\nexport const isServer = !(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__: any;\n    __PRELOADED_STATE__: any;\n  }\n}\n\nexport default () => {\n  const history = isServer\n    ? createMemoryHistory({ initialEntries: ['/'] })\n    : createBrowserHistory();\n\n  const initialState = !isServer ? window.__PRELOADED_STATE__ || {} : {};\n\n  const sagaMiddleware = createSagaMiddleware();\n\n  const middlewares = [routerMiddleware(history), thunk, sagaMiddleware];\n\n  if (!isServer && typeof jest === 'undefined') {\n    middlewares.push(loggerMiddleware);\n  }\n\n  const composeEnhancers = isServer\n    ? compose\n    : window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  const store = createStore(\n    rootReducer(history),\n    initialState,\n    composeEnhancers(applyMiddleware(...middlewares)),\n  );\n  const persistor = persistStore(store);\n\n  sagaMiddleware.run(rootSaga);\n\n  if (module.hot) {\n    module.hot.accept('./rootReducer', () => {\n      // eslint-disable-next-line global-require\n      const nextRootReducer = require('./rootReducer').default(history);\n      store.replaceReducer(nextRootReducer);\n    });\n  }\n\n  return { history, persistor, store };\n};\n","import { ConnectedRouter } from 'connected-react-router';\nimport React from 'react';\nimport { Frontload } from 'react-frontload';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport App from './App';\nimport configureStore from './store/configureStore';\n\nconst { history, persistor, store } = configureStore();\n\nconst AppContainer = () => (\n  <Provider store={store}>\n    <PersistGate persistor={persistor}>\n      <ConnectedRouter history={history}>\n        <Frontload noServerRender={true}>\n          <App />\n        </Frontload>\n      </ConnectedRouter>\n    </PersistGate>\n  </Provider>\n);\n\nexport default AppContainer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href,\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { hydrate, render } from 'react-dom';\nimport Loadable from 'react-loadable';\n\nimport AppContainer from './AppContainer';\nimport { unregister } from './serviceWorker';\n\n// Unregister service worker\nunregister();\n\nconst mountEl: any = document.getElementById('root');\n\nif (mountEl.hasChildNodes() === true) {\n  Loadable.preloadReady().then(() => {\n    hydrate(<AppContainer />, mountEl);\n  });\n} else {\n  render(<AppContainer />, mountEl);\n}\n\nif (module.hot) {\n  module.hot.accept('./AppContainer', () => {\n    render(<AppContainer />, mountEl);\n  });\n}\n"],"sourceRoot":""}